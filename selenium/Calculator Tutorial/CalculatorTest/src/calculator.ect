<?xml version="1.0" encoding="UTF-8"?>
<Model name="calculator" version="1">
    <Class name="com.example.test.CalculatorTest" runOnAndroid="false">
        <Method name="testCalculator">
            <Parameter name="text1" type="String" isExpected="false" expected="0" linked="false">
                <Comments>
                    <TypeComments/>
                </Comments>
                <Choice name="valid" value="">
                    <Choice name="zero" value="0"/>
                    <Choice name="non-zero" value="">
                        <Choice name="positive" value="5.5"/>
                        <Choice name="negative" value="-3"/>
                    </Choice>
                </Choice>
                <Choice name="invalid" value="">
                    <Choice name="empty" value=""/>
                    <Choice name="malformed" value="X"/>
                </Choice>
            </Parameter>
            <Parameter name="operationType" type="String" isExpected="false" expected="0" linked="false">
                <Comments>
                    <TypeComments/>
                </Comments>
                <Choice name="addition" value="+"/>
                <Choice name="subtraction" value="-"/>
                <Choice name="multiplication" value="x"/>
                <Choice name="division" value="/"/>
            </Parameter>
            <Parameter name="text2" type="String" isExpected="false" expected="0" linked="false">
                <Comments>
                    <TypeComments/>
                </Comments>
                <Choice name="valid" value="">
                    <Choice name="zero" value="0"/>
                    <Choice name="non-zero" value="">
                        <Choice name="positive" value="5.5"/>
                        <Choice name="negative" value="-3"/>
                    </Choice>
                </Choice>
                <Choice name="invalid" value="">
                    <Choice name="empty" value=""/>
                    <Choice name="malformed" value="X"/>
                </Choice>
            </Parameter>
            <Parameter name="expectedResult" type="String" isExpected="true" expected="irrelevant" linked="false">
                <Comments>
                    <TypeComments/>
                </Comments>
                <Choice name="choice" value="9"/>
            </Parameter>
            <Parameter name="expectedComment" type="String" isExpected="true" expected="irrelevant" linked="false">
                <Comments>
                    <TypeComments/>
                </Comments>
                <Choice name="choice" value=""/>
            </Parameter>
            <Constraint name="multiplication-zero">
                <Premise>
                    <StatementArray operator="and">
                        <Statement choice="multiplication" parameter="operationType" relation="="/>
                        <StatementArray operator="and">
                            <StatementArray operator="and">
                                <Statement choice="valid" parameter="text1" relation="="/>
                                <Statement choice="valid" parameter="text2" relation="="/>
                            </StatementArray>
                            <StatementArray operator="or">
                                <Statement choice="valid:zero" parameter="text1" relation="="/>
                                <Statement choice="valid:zero" parameter="text2" relation="="/>
                            </StatementArray>
                        </StatementArray>
                    </StatementArray>
                </Premise>
                <Consequence>
                    <ExpectedValueStatement parameter="expectedResult" value="0"/>
                </Consequence>
            </Constraint>
            <Constraint name="blank\sinput">
                <Premise>
                    <StatementArray operator="or">
                        <Statement choice="invalid:empty" parameter="text1" relation="="/>
                        <Statement choice="invalid:empty" parameter="text2" relation="="/>
                    </StatementArray>
                </Premise>
                <Consequence>
                    <ExpectedValueStatement parameter="expectedComment" value="No\sinput\scan\sstay\sblank."/>
                </Consequence>
            </Constraint>
            <Constraint name="error">
                <Premise>
                    <StatementArray operator="or">
                        <Statement choice="invalid" parameter="text1" relation="="/>
                        <Statement choice="invalid" parameter="text2" relation="="/>
                    </StatementArray>
                </Premise>
                <Consequence>
                    <ExpectedValueStatement parameter="expectedResult" value="ERROR"/>
                </Consequence>
            </Constraint>
            <Constraint name="wrong\sinput\sformat">
                <Premise>
                    <StatementArray operator="and">
                        <StatementArray operator="and">
                            <Statement choice="invalid:empty" parameter="text1" relation="≠"/>
                            <Statement choice="invalid:empty" parameter="text2" relation="≠"/>
                        </StatementArray>
                        <StatementArray operator="or">
                            <Statement choice="invalid:malformed" parameter="text1" relation="="/>
                            <Statement choice="invalid:malformed" parameter="text2" relation="="/>
                        </StatementArray>
                    </StatementArray>
                </Premise>
                <Consequence>
                    <ExpectedValueStatement parameter="expectedComment" value="Wrong\sinput\sformat."/>
                </Consequence>
            </Constraint>
            <Constraint name="infinity-positive">
                <Premise>
                    <StatementArray operator="and">
                        <Statement choice="division" parameter="operationType" relation="="/>
                        <Statement choice="valid:non-zero:positive" parameter="text1" relation="="/>
                        <Statement choice="valid:zero" parameter="text2" relation="="/>
                    </StatementArray>
                </Premise>
                <Consequence>
                    <ExpectedValueStatement parameter="expectedResult" value="Infinity"/>
                </Consequence>
            </Constraint>
            <Constraint name="infinity-negative">
                <Premise>
                    <StatementArray operator="and">
                        <Statement choice="division" parameter="operationType" relation="="/>
                        <Statement choice="valid:non-zero:negative" parameter="text1" relation="="/>
                        <Statement choice="valid:zero" parameter="text2" relation="="/>
                    </StatementArray>
                </Premise>
                <Consequence>
                    <ExpectedValueStatement parameter="expectedResult" value="-Infinity"/>
                </Consequence>
            </Constraint>
            <Constraint name="constraint">
                <Premise>
                    <StatementArray operator="and">
                        <Statement choice="division" parameter="operationType" relation="="/>
                        <Statement choice="valid:zero" parameter="text1" relation="="/>
                        <Statement choice="valid:zero" parameter="text2" relation="="/>
                    </StatementArray>
                </Premise>
                <Consequence>
                    <ExpectedValueStatement parameter="expectedResult" value="NaN"/>
                </Consequence>
            </Constraint>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="addition"/>
                <TestParameter choice="valid:non-zero:positive"/>
                <ExpectedValue value="11"/>
                <ExpectedValue value=""/>
            </TestCase>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="addition"/>
                <TestParameter choice="valid:non-zero:negative"/>
                <ExpectedValue value="2.5"/>
                <ExpectedValue value=""/>
            </TestCase>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="subtraction"/>
                <TestParameter choice="valid:non-zero:positive"/>
                <ExpectedValue value="0"/>
                <ExpectedValue value=""/>
            </TestCase>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="subtraction"/>
                <TestParameter choice="valid:non-zero:negative"/>
                <ExpectedValue value="8.5"/>
                <ExpectedValue value=""/>
            </TestCase>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="multiplication"/>
                <TestParameter choice="valid:non-zero:positive"/>
                <ExpectedValue value="30.25"/>
                <ExpectedValue value=""/>
            </TestCase>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="multiplication"/>
                <TestParameter choice="valid:non-zero:negative"/>
                <ExpectedValue value="-16.5"/>
                <ExpectedValue value=""/>
            </TestCase>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="division"/>
                <TestParameter choice="valid:non-zero:positive"/>
                <ExpectedValue value="1"/>
                <ExpectedValue value=""/>
            </TestCase>
            <TestCase testSuite="default\ssuite">
                <TestParameter choice="valid:non-zero:positive"/>
                <TestParameter choice="division"/>
                <TestParameter choice="valid:non-zero:negative"/>
                <ExpectedValue value="-1.8333333333333333"/>
                <ExpectedValue value=""/>
            </TestCase>
        </Method>
    </Class>
    <Class name="com.example.test.TestClass" runOnAndroid="false"/>
</Model>
